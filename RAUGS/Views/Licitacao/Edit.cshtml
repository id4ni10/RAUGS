@model RAUGS.Models.Licitacao
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Licitacao</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.dat_licitacao_lic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dat_licitacao_lic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dat_licitacao_lic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cod_cliente_cli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cod_cliente_cli, new SelectList(ViewBag.Clientes, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cod_cliente_cli, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cod_tipo_licitacao_tli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cod_tipo_licitacao_tli, new SelectList(new List<SelectListItem> { new SelectListItem { Text = "Selecione", Value = "" }, new SelectListItem { Text = "Pregão Presêncial", Value = "2" }, new SelectListItem { Text = "Pregão Eletônico", Value = "1" } }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cod_tipo_licitacao_tli, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cod_numero_num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cod_numero_num, new SelectList(ViewBag.Numeros, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cod_numero_num, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.num_mes_lic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_mes_lic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_mes_lic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.num_valor_lic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_valor_lic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_valor_lic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tip_status_lic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.tip_status_lic)
                    @Html.ValidationMessageFor(model => model.tip_status_lic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
